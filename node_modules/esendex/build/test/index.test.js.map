{"version":3,"sources":["test/index.test.ts"],"names":[],"mappings":"AAAA,IAAY,MAAM,WAAM,QACxB,CAAC,CAD+B;AAChC,IAAO,KAAK,WAAW,OAAO,CAAC,CAAA;AAC/B,IAAO,WAAW,WAAW,YAAY,CAAC,CAAA;AAE1C,IAAI,UAAU,GAAG,WAAW,CAAC,UAAU,EAAE,CAAA;AAEzC,QAAQ,CAAC,QAAQ,EAAE;IAEjB,QAAQ,CAAC,wBAAwB,EAAE;QAEjC,IAAI,OAAO,CAAC;QACZ,IAAI,UAAU,CAAC;QACf,IAAI,UAAU,CAAC;QACf,IAAI,MAAc,CAAC;QAEnB,MAAM,CAAC;YACL,OAAO,GAAG,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC;YAElC,UAAU,GAAG,EAAE,CAAC;YAChB,UAAU,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAE9C,IAAI,OAAO,GAAG,UAAU,CAAC,SAAS,EAAE;gBAClC,UAAU,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE;aACnC,CAAC,CAAC;YAEH,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wBAAwB,EAAE;YAC3B,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YACvC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE;YACrC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"test/index.test.js","sourcesContent":["import * as assert from 'assert'\r\nimport sinon = require('sinon')\r\nimport _proxyquire = require('proxyquire')\r\nimport {Client} from '../lib/client'\r\nlet proxyquire = _proxyquire.noCallThru()\r\n\r\ndescribe('Client', function () {\r\n\r\n  describe('expose all public apis', function () {\r\n\r\n    var options;\r\n    var clientFake;\r\n    var clientStub;\r\n    var client: Client;\r\n\r\n    before(function () {\r\n      options = { Stuff: 'and things' };\r\n\r\n      clientFake = {};\r\n      clientStub = sinon.stub().returns(clientFake);\r\n\r\n      let Esendex = proxyquire('../lib/', {\r\n        './client': { Client: clientStub },\r\n      });\r\n      \r\n      client = Esendex(options);\r\n    });\r\n\r\n    it('should create a client', function () {\r\n      sinon.assert.calledWithNew(clientStub);\r\n      sinon.assert.calledWith(clientStub, options);\r\n    });\r\n\r\n    it('should return the created client', function () {\r\n      assert.strictEqual(client, clientFake);\r\n    });\r\n\r\n  });\r\n\r\n});"],"sourceRoot":"../../src"}