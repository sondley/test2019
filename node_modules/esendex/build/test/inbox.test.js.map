{"version":3,"sources":["test/inbox.test.ts"],"names":[],"mappings":"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","file":"test/inbox.test.js","sourcesContent":["import assert = require('assert')\r\nimport sinon = require('sinon')\r\nimport _proxyquire = require('proxyquire')\r\nimport {Inbox} from '../lib/inbox'\r\nlet proxyquire = _proxyquire.noCallThru()\r\n\r\ndescribe('Inbox', function () {\r\n\r\n  describe('get', function () {\r\n\r\n    var responseXml;\r\n    var requestStub;\r\n    var options;\r\n    var callbackSpy;\r\n    var expectedMessageHeaders;\r\n    var parseStringStub;\r\n    var xmlParserStub;\r\n\r\n    before(function () {\r\n      responseXml = 'not actually xml here';\r\n      requestStub = sinon.stub().callsArgWith(5, null, responseXml);\r\n      var esendexFake = {\r\n        requesthandler: {\r\n          request: requestStub\r\n        }\r\n      };\r\n      options = { banana: 'pineapple' };\r\n      callbackSpy = sinon.spy();\r\n      expectedMessageHeaders = 'messageheaders';\r\n      let responseObject = { messageheaders: expectedMessageHeaders };\r\n      \r\n      parseStringStub = sinon.stub().callsArgWith(1, null, responseObject)\r\n      xmlParserStub = sinon.stub().returns({ parseString: parseStringStub });\r\n\r\n      var module = proxyquire('../lib/inbox', {\r\n        './xmlparser': { XmlParser: xmlParserStub }\r\n      });\r\n      var inbox: Inbox = new module.Inbox(esendexFake);\r\n      inbox.get(options, callbackSpy);\r\n    });\r\n\r\n    it('should create an instance of the XmlParser', function () {\r\n      sinon.assert.calledOnce(xmlParserStub);\r\n      sinon.assert.calledWithNew(xmlParserStub);\r\n    });\r\n\r\n    it('should call the inbox endpoint', function () {\r\n      sinon.assert.calledWith(requestStub, 'GET', '/v1.0/inbox/messages', options, null, 200, sinon.match.func);\r\n    });\r\n\r\n    it('should parse the xml response', function () {\r\n      sinon.assert.calledWith(parseStringStub, responseXml, sinon.match.func);\r\n    });\r\n\r\n    it('should call the callback with the parsed inbox response', function () {\r\n      sinon.assert.calledWith(callbackSpy, null, expectedMessageHeaders);\r\n    });\r\n\r\n  });\r\n\r\n  describe('get when request error', function () {\r\n\r\n    var requestError;\r\n    var callbackSpy;\r\n\r\n    before(function () {\r\n      requestError = new Error('some request error');\r\n      var esendexFake = {\r\n        requesthandler: {\r\n          request: sinon.stub().callsArgWith(5, requestError)\r\n        }\r\n      };\r\n      callbackSpy = sinon.spy();\r\n      \r\n      var module = proxyquire('../lib/inbox', {\r\n        './xmlparser': { XmlParser: sinon.stub() }\r\n      });\r\n      var inbox: Inbox = new module.Inbox(esendexFake);\r\n      inbox.get(null, callbackSpy);\r\n    });\r\n\r\n    it('should call the callback with the error', function () {\r\n      sinon.assert.calledWith(callbackSpy, requestError);\r\n    });\r\n\r\n  });\r\n\r\n  describe('get when parser error', function () {\r\n\r\n    var parserError;\r\n    var callbackSpy;\r\n\r\n    before(function () {\r\n      parserError = new Error('some parser error');\r\n      var esendexFake = {\r\n        requesthandler: {\r\n          request: sinon.stub().callsArgWith(5, null, 'some response data')\r\n        }\r\n      };\r\n      callbackSpy = sinon.spy();\r\n\r\n      let parseStringStub = sinon.stub().callsArgWith(1, parserError)\r\n      let xmlParserStub = sinon.stub().returns({ parseString: parseStringStub });\r\n\r\n      var module = proxyquire('../lib/inbox', {\r\n        './xmlparser': { XmlParser: xmlParserStub }\r\n      });\r\n      var inbox: Inbox = new module.Inbox(esendexFake);\r\n      inbox.get(null, callbackSpy);\r\n    });\r\n\r\n    it('should call the callback with the error', function () {\r\n      sinon.assert.calledWith(callbackSpy, parserError);\r\n    });\r\n\r\n  });\r\n\r\n  describe('get for specific account', function () {\r\n\r\n    var responseXml;\r\n    var requestStub;\r\n    var options;\r\n    var callbackSpy;\r\n    var responseObject;\r\n    var parseStringStub;\r\n\r\n    before(function () {\r\n      responseXml = 'jargon';\r\n      requestStub = sinon.stub().callsArgWith(5, null, responseXml);\r\n      var esendexFake = {\r\n        requesthandler: {\r\n          request: requestStub\r\n        }\r\n      };\r\n      options = { accountreference: 'EX00PEAR', banana: 'pineapple' };\r\n      callbackSpy = sinon.spy();\r\n      responseObject = { messageheaders: 'messageheaders' };\r\n      \r\n      parseStringStub = sinon.stub().callsArgWith(1, null, responseObject)\r\n      let xmlParserStub = sinon.stub().returns({ parseString: parseStringStub });\r\n\r\n      var module = proxyquire('../lib/inbox', {\r\n        './xmlparser': { XmlParser: xmlParserStub }\r\n      });\r\n      var inbox: Inbox = new module.Inbox(esendexFake);\r\n      inbox.get(options, callbackSpy);\r\n    });\r\n\r\n    it('should call the inbox endpoint', function () {\r\n      sinon.assert.calledWith(requestStub, 'GET', '/v1.0/inbox/EX00PEAR/messages', options, null, 200, sinon.match.func);\r\n    });\r\n\r\n    it('should parse the xml response', function () {\r\n      sinon.assert.calledWith(parseStringStub, responseXml, sinon.match.func);\r\n    });\r\n\r\n    it('should call the callback with the parsed inbox response', function () {\r\n      sinon.assert.calledWith(callbackSpy, null, responseObject.messageheaders);\r\n    });\r\n\r\n  });\r\n\r\n  describe('mark read status', function () {\r\n\r\n    var responseXml;\r\n    var requestStub;\r\n    var options;\r\n    var expectedPath;\r\n    var callbackSpy;\r\n\r\n    before(function () {\r\n      responseXml = 'jargon';\r\n      requestStub = sinon.stub().callsArgWith(5, null, responseXml);\r\n      var esendexFake = {\r\n        requesthandler: {\r\n          request: requestStub\r\n        }\r\n      };\r\n      options = { id: 'd0c8c6f0-6e8b-4ec7-8ad3-c1f8109e753e', read: true };\r\n      expectedPath = '/v1.0/inbox/messages/' + options.id;\r\n      callbackSpy = sinon.spy();\r\n\r\n      var module = proxyquire('../lib/inbox', {});\r\n      var inbox: Inbox = new module.Inbox(esendexFake);\r\n      inbox.update(options, callbackSpy);\r\n    });\r\n\r\n    it('should call the inbox message endpoint', function () {\r\n      sinon.assert.calledWith(requestStub, 'PUT', expectedPath, { action: 'read' }, null, 200, sinon.match.func);\r\n    });\r\n\r\n    it('should call the callback without a response', function () {\r\n      sinon.assert.calledWith(callbackSpy, null);\r\n    });\r\n\r\n  });\r\n\r\n  describe('mark unread status', function () {\r\n\r\n    var requestStub;\r\n    var options;\r\n    var expectedPath;\r\n    var callbackSpy;\r\n\r\n    before(function () {\r\n      requestStub = sinon.stub().callsArgWith(5, null, '');\r\n      var esendexFake = {\r\n        requesthandler: {\r\n          request: requestStub\r\n        }\r\n      };\r\n      options = { id: 'b13bf37b-9196-4837-8eaf-edd4bc2a7021', read: false };\r\n      expectedPath = '/v1.0/inbox/messages/' + options.id;\r\n      callbackSpy = sinon.spy();\r\n\r\n      var module = proxyquire('../lib/inbox', {});\r\n      var inbox: Inbox = new module.Inbox(esendexFake);\r\n      inbox.update(options, callbackSpy);\r\n    });\r\n\r\n    it('should call the inbox message endpoint', function () {\r\n      sinon.assert.calledWith(requestStub, 'PUT', expectedPath, { action: 'unread' }, null, 200, sinon.match.func);\r\n    });\r\n\r\n    it('should call the callback without a response', function () {\r\n      sinon.assert.calledWith(callbackSpy, null);\r\n    });\r\n\r\n  });\r\n\r\n  describe('mark read or unread when request error', function () {\r\n\r\n    var requestError;\r\n    var callbackSpy;\r\n\r\n    before(function () {\r\n      requestError = new Error('some request error');\r\n      var esendexFake = {\r\n        requesthandler: {\r\n          request: sinon.stub().callsArgWith(5, requestError)\r\n        }\r\n      };\r\n      callbackSpy = sinon.spy();\r\n\r\n      var module = proxyquire('../lib/inbox', {});\r\n      var inbox: Inbox = new module.Inbox(esendexFake);\r\n      inbox.update({ id: 'sdfsf', read: false }, callbackSpy);\r\n    });\r\n\r\n    it('should call the callback with the error', function () {\r\n      sinon.assert.calledWith(callbackSpy, requestError);\r\n    });\r\n\r\n  });\r\n\r\n  describe('delete inbox message', function () {\r\n\r\n    var requestStub;\r\n    var expectedPath;\r\n    var callbackSpy;\r\n\r\n    before(function () {\r\n      requestStub = sinon.stub().callsArgWith(5, null, '');\r\n      var esendexFake = {\r\n        requesthandler: {\r\n          request: requestStub\r\n        }\r\n      };\r\n      var id = 'b13bf37b-9196-4837-8eaf-edd4bc2a7021';\r\n      expectedPath = '/v1.0/inbox/messages/' + id;\r\n      callbackSpy = sinon.spy();\r\n\r\n      var module = proxyquire('../lib/inbox', {});\r\n      var inbox: Inbox = new module.Inbox(esendexFake);\r\n      inbox.delete(id, callbackSpy);\r\n    });\r\n\r\n    it('should call the inbox message endpoint', function () {\r\n      sinon.assert.calledWith(requestStub, 'DELETE', expectedPath, null, null, 200, sinon.match.func);\r\n    });\r\n\r\n    it('should call the callback without a response', function () {\r\n      sinon.assert.calledWith(callbackSpy, null);\r\n    });\r\n\r\n  });\r\n\r\n  describe('delete inbox message when request error', function () {\r\n\r\n    var requestError;\r\n    var callbackSpy;\r\n\r\n    before(function () {\r\n      requestError = new Error('some request error');\r\n      var esendexFake = {\r\n        requesthandler: {\r\n          request: sinon.stub().callsArgWith(5, requestError)\r\n        }\r\n      };\r\n      callbackSpy = sinon.spy();\r\n\r\n      var module = proxyquire('../lib/inbox', {});\r\n      var inbox: Inbox = new module.Inbox(esendexFake);\r\n      inbox.delete('sdfsdsdfds', callbackSpy);\r\n    });\r\n\r\n    it('should call the callback with the error', function () {\r\n      sinon.assert.calledWith(callbackSpy, requestError);\r\n    });\r\n\r\n  });\r\n\r\n});"],"sourceRoot":"../../src"}