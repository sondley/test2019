{"version":3,"sources":["test/esendexfake.ts"],"names":["copy","EsendexFake","EsendexFake.constructor","EsendexFake.listen","EsendexFake.close","EsendexFake.MessageDispatcherEndpoint","EsendexFake.MessageHeaderEndpoint","EsendexFake.MessageHeadersEndpoint","EsendexFake.AccountEndpoint","EsendexFake.AccountsEndpoint"],"mappings":"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","file":"test/esendexfake.js","sourcesContent":["import * as express from 'express'\r\nimport {createReadStream} from 'fs'\r\nimport {join as joinPath} from 'path'\r\nimport * as bodyParser from 'body-parser'\r\n    \r\nfunction copy(source) {\r\n  var origin = {};\r\n  var keys = Object.keys(source);\r\n  var i = keys.length;\r\n  while (i--) {\r\n    origin[keys[i]] = source[keys[i]];\r\n  }\r\n  return origin;\r\n};\r\n\r\ndeclare interface Loggedrequest {\r\n  headers: Object\r\n  body: string\r\n}\r\n\r\nexport class EsendexFake {\r\n  private server;\r\n  private app: express.Application;\r\n  private dispatcherRequests: Loggedrequest[];\r\n  \r\n  constructor() {\r\n    this.app = express();\r\n    \r\n    this.dispatcherRequests = [];\r\n    \r\n    var textBodyParser = bodyParser.text();\r\n    \r\n    this.app.get('/v1.0/accounts', this.AccountsEndpoint.bind(this));\r\n    this.app.get('/v1.0/accounts/01234567-89AB-CDEF-0123-456789ABCDEF', this.AccountEndpoint.bind(this));\r\n    this.app.get('/v1.0/messageheaders', this.MessageHeadersEndpoint.bind(this));\r\n    this.app.get('/v1.0/messageheaders/CDEB3533-1F76-46D7-A2A9-0DAF8290F7FC', this.MessageHeaderEndpoint.bind(this));\r\n    this.app.post('/v1.0/messagedispatcher', textBodyParser, this.MessageDispatcherEndpoint.bind(this));\r\n  }\r\n  \r\n  listen(port, cb) {\r\n    this.server = this.app.listen(port, cb);\r\n  }\r\n  \r\n  close() {\r\n    this.server.close();\r\n  }\r\n  \r\n  private MessageDispatcherEndpoint(req: express.Request, res: express.Response) {\r\n    this.dispatcherRequests.push({\r\n      headers: copy(req.headers),\r\n      body: req.body\r\n    });\r\n    res.status(200);\r\n    res.set('Content-Type', 'application/xml');\r\n    createReadStream(joinPath(__dirname, '..', '..', 'responses', 'messagedispatcher-post.xml')).pipe(res);\r\n  }\r\n  \r\n  private MessageHeaderEndpoint(req: express.Request, res: express.Response) {\r\n    res.status(200);\r\n    res.set('Content-Type', 'application/xml');\r\n    createReadStream(joinPath(__dirname, '..', '..', 'responses', 'messageheaders-get-single.xml')).pipe(res);\r\n  }\r\n  \r\n  private MessageHeadersEndpoint(req: express.Request, res: express.Response) {\r\n    res.status(200);\r\n    res.set('Content-Type', 'application/xml');\r\n    createReadStream(joinPath(__dirname, '..', '..', 'responses', 'messageheaders-get-all.xml')).pipe(res);\r\n  }\r\n  \r\n  private AccountEndpoint(req: express.Request, res: express.Response) {\r\n    res.status(200);\r\n    res.set('Content-Type', 'application/xml');\r\n    createReadStream(joinPath(__dirname, '..', '..', 'responses', 'accounts-get-single.xml')).pipe(res);\r\n  }\r\n  \r\n  private AccountsEndpoint(req: express.Request, res: express.Response) {\r\n    res.status(200);\r\n    res.set('Content-Type', 'application/xml');\r\n    createReadStream(joinPath(__dirname, '..', '..', 'responses', 'accounts-get-all.xml')).pipe(res);\r\n  }\r\n}"],"sourceRoot":"../../src"}