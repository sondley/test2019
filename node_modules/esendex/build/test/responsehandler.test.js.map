{"version":3,"sources":["test/responsehandler.test.ts"],"names":[],"mappings":"AAAA,IAAO,KAAK,WAAW,OAAO,CAAC,CAAC;AAChC,gCAA8B,wBAE9B,CAAC,CAFqD;AAEtD,QAAQ,CAAC,kBAAkB,EAAE;IAE3B,QAAQ,CAAC,0BAA0B,EAAE;QAEnC,IAAI,cAAc,CAAC;QACnB,IAAI,IAAI,CAAC;QACT,IAAI,YAAY,CAAC;QACjB,IAAI,WAAW,CAAC;QAEhB,MAAM,CAAC;YACL,cAAc,GAAG,GAAG,CAAC;YACrB,YAAY,GAAG;gBACb,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE;gBAChB,UAAU,EAAE,cAAc;aAC3B,CAAC;YACF,IAAI,GAAG,YAAY,CAAC;YACpB,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACvD,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAE5C,WAAW,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YAC1B,IAAI,OAAO,GAAG,IAAI,iCAAe,EAAE,CAAC;YACpC,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE;YAC/C,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE;YAC/C,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8DAA8D,EAAE;YACjE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,4BAA4B,EAAE;QAErC,IAAI,YAAY,CAAC;QACjB,IAAI,WAAW,CAAC;QAEhB,MAAM,CAAC;YACL,IAAI,cAAc,GAAG,GAAG,CAAC;YACzB,YAAY,GAAG;gBACb,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE;gBAChB,UAAU,EAAE,GAAG;aAChB,CAAC;YACF,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;YAChE,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAE5C,WAAW,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YAC1B,IAAI,OAAO,GAAG,IAAI,iCAAe,EAAE,CAAC;YACpC,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wCAAwC,EAAE;YAC3C,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"test/responsehandler.test.js","sourcesContent":["import sinon = require('sinon');\r\nimport {ResponseHandler} from '../lib/responsehandler'\r\n\r\ndescribe('Response Handler', function () {\r\n\r\n  describe('handle expected response', function () {\r\n\r\n    var expectedStatus;\r\n    var data;\r\n    var responseFake;\r\n    var callbackSpy;\r\n\r\n    before(function () {\r\n      expectedStatus = 345;\r\n      responseFake = { \r\n        on: sinon.stub(),\r\n        statusCode: expectedStatus\r\n      };\r\n      data = \"data chunk\";\r\n      responseFake.on.withArgs('data').callsArgWith(1, data);\r\n      responseFake.on.withArgs('end').callsArg(1);\r\n\r\n      callbackSpy = sinon.spy();\r\n      let handler = new ResponseHandler();\r\n      handler.handle(responseFake, expectedStatus, callbackSpy);\r\n    });\r\n\r\n    it('should attach a data event to the response', function () {\r\n      sinon.assert.calledWith(responseFake.on, 'data');\r\n    });\r\n\r\n    it('should attach an end event to the response', function () {\r\n      sinon.assert.calledWith(responseFake.on, 'end');\r\n    });\r\n\r\n    it('should call the callback with no error and the response data', function () {\r\n      sinon.assert.calledWith(callbackSpy, null, data);\r\n    });\r\n\r\n  });\r\n\r\n  describe('handle unexpected response', function () {\r\n\r\n    var responseFake;\r\n    var callbackSpy;\r\n\r\n    before(function () {\r\n      var expectedStatus = 345;\r\n      responseFake = { \r\n        on: sinon.stub(),\r\n        statusCode: 123\r\n      };\r\n      responseFake.on.withArgs('data').callsArgWith(1, \"other chunk\");\r\n      responseFake.on.withArgs('end').callsArg(1);\r\n\r\n      callbackSpy = sinon.spy();\r\n      let handler = new ResponseHandler();\r\n      handler.handle(responseFake, expectedStatus, callbackSpy);\r\n    });\r\n\r\n    it('should call the callback with an error', function () {\r\n      sinon.assert.calledWith(callbackSpy, sinon.match.instanceOf(Error));\r\n    });\r\n\r\n  });\r\n\r\n});"],"sourceRoot":"../../src"}