{"version":3,"sources":["test/requesthandler.test.ts"],"names":[],"mappings":"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","file":"test/requesthandler.test.js","sourcesContent":["import assert = require('assert')\r\nimport sinon = require('sinon')\r\nimport _proxyquire = require('proxyquire')\r\nimport {RequestHandler, RequestHandlerOptions} from '../lib/requesthandler'\r\nimport {ResponseHandler} from '../lib/responsehandler'\r\nlet proxyquire = _proxyquire.noCallThru()\r\n\r\ndescribe('RequestHandler', function () {\r\n\r\n  describe('constructor with defaults', function () {\r\n\r\n    var request: RequestHandler;\r\n\r\n    before(function () {\r\n      let Handlers = proxyquire('../lib/requesthandler', {});\r\n      request = new Handlers.RequestHandler();\r\n    });\r\n\r\n    it('should create an instance of the request handler', function () {\r\n      assert.notEqual(request, null);\r\n      assert.equal(typeof request, 'object');\r\n    });\r\n\r\n    it('should expose the default options', function () {\r\n      var actualOptions = request.options;\r\n      assert.strictEqual(actualOptions.host, 'api.esendex.com');\r\n      assert.strictEqual(actualOptions.port, 443);\r\n      assert.strictEqual(actualOptions.https, true);\r\n      assert.strictEqual(actualOptions.timeout, 30000);\r\n      assert.strictEqual(actualOptions.username, undefined);\r\n      assert.strictEqual(actualOptions.password, undefined);\r\n    });\r\n\r\n  });\r\n\r\n  describe('constructor with all options specified', function () {\r\n\r\n    var options;\r\n    var request: RequestHandler;\r\n\r\n    before(function () {\r\n      options = {\r\n        host: 'asdadasdds',\r\n        port: 24324,\r\n        https: false,\r\n        timeout: 43243,\r\n        username: 'asdasdads',\r\n        password: 'sdfsdffs'\r\n      };\r\n      let Handlers = proxyquire('../lib/requesthandler', {});\r\n      request = new Handlers.RequestHandler(options);\r\n    });\r\n\r\n    it('should expose the specified options', function () {\r\n      let actualOptions = request.options;\r\n      assert.strictEqual(actualOptions.host, options.host);\r\n      assert.strictEqual(actualOptions.port, options.port);\r\n      assert.strictEqual(actualOptions.https, options.https);\r\n      assert.strictEqual(actualOptions.timeout, options.timeout);\r\n      assert.strictEqual(actualOptions.username, options.username);\r\n      assert.strictEqual(actualOptions.password, options.password);\r\n    });\r\n\r\n  });\r\n\r\n  describe('constructor with partial options specified', function () {\r\n\r\n    var options;\r\n    var request: RequestHandler;\r\n\r\n    before(function () {\r\n      options = {\r\n        host: 'sdfsdf',\r\n        password: 'sdfsdffs'\r\n      };\r\n      let Handlers = proxyquire('../lib/requesthandler', {});\r\n      request = new Handlers.RequestHandler(options);\r\n    });\r\n\r\n    it('should expose the partially specified options', function () {\r\n      let actualOptions = request.options;\r\n      assert.equal(actualOptions.host, options.host);\r\n      assert.equal(actualOptions.password, options.password);\r\n    });\r\n\r\n    it('should expose the default unspecified actualOptions', function () {\r\n      let actualOptions = request.options;\r\n      assert.equal(actualOptions.port, 443);\r\n      assert.equal(actualOptions.https, true);\r\n      assert.equal(actualOptions.timeout, 30000);\r\n      assert.equal(actualOptions.username, undefined);\r\n    });\r\n\r\n  });\r\n\r\n  describe('with no request body', function () {\r\n\r\n    var options: RequestHandlerOptions;\r\n    var expectedAuth;\r\n    var method;\r\n    var path;\r\n    var query;\r\n    var expectedStatus;\r\n    var callback;\r\n    var requestStub;\r\n    var querystring;\r\n    var expectedPath;\r\n    var responseBody;\r\n    var requestFake;\r\n    var responseFake;\r\n    var responseHandlerStub: Sinon.SinonStub;\r\n    var expectedUserAgent;\r\n    var stringifyStub;\r\n\r\n    before(function () {\r\n      options = {\r\n        host: 'some host',\r\n        port: 6677,\r\n        https: true,\r\n        timeout: 321,\r\n        username: 'user@host.com',\r\n        password: 'wildermuth'\r\n      };\r\n\r\n      method = 'BAM';\r\n      path = '/some/path';\r\n      query = {param1: 10, param2: 22};\r\n      expectedStatus = 435;\r\n      querystring = 'asdljhasdkljalkdjs';\r\n      expectedPath = path + '?' + querystring;\r\n      responseBody = 'This was the response body';\r\n\r\n      expectedAuth = options.username + ':' + options.password;\r\n\r\n      let socketFake = { setTimeout: sinon.stub(), on: sinon.stub(), listeners: sinon.stub().returns([]) };\r\n\r\n      requestFake = { on: sinon.stub(), end: sinon.expectation.create().once() };\r\n      requestFake.on.withArgs('socket').callsArgWith(1, socketFake);\r\n\r\n      responseFake = 'This is a fake response object';\r\n\r\n      requestStub = sinon.expectation.create().once();\r\n      requestStub.callsArgWith(1, responseFake);\r\n      requestStub.returns(requestFake);\r\n      \r\n      let responseHandlerHandle = sinon.stub().callsArgWith(2, null, responseBody);\r\n      responseHandlerStub = sinon.stub().returns({ handle: responseHandlerHandle })\r\n      \r\n      let userAgentBuilderFake = { Build: sinon.stub().returns(expectedUserAgent) }\r\n\r\n      stringifyStub = sinon.stub().returns(querystring);\r\n\r\n      callback = sinon.expectation.create().once();\r\n\r\n      let Handlers = proxyquire('../lib/requesthandler', {\r\n        'https': { request: requestStub },\r\n        'querystring': { stringify: stringifyStub },\r\n        './responsehandler': { ResponseHandler: responseHandlerStub },\r\n        './useragentbuilder': { UserAgentBuilder: userAgentBuilderFake }\r\n      });\r\n      let request: RequestHandler = new Handlers.RequestHandler(options);\r\n      request.request(method, path, query, null, expectedStatus, callback);\r\n    });\r\n\r\n    it('should stringify the query string', function () {\r\n      sinon.assert.calledWith(stringifyStub, query);\r\n    });\r\n\r\n    it('should call http.request with the expected options', function () {\r\n      sinon.assert.calledWith(requestStub, sinon.match({ \r\n        host: options.host,\r\n        port: options.port,\r\n        path: expectedPath,\r\n        method: method,\r\n        auth: expectedAuth\r\n      }));\r\n    });\r\n\r\n    it('should call http.request with the expected headers', function () {\r\n      sinon.assert.calledWith(requestStub, sinon.match({ headers: {\r\n        'Accept': 'application/xml',\r\n        'User-Agent': expectedUserAgent\r\n      }}));\r\n    });\r\n\r\n    it('should end the request', function () {\r\n      requestFake.end.verify();\r\n    });\r\n\r\n    it('should call the response handler to handle the response', function () {\r\n      sinon.assert.calledOnce(responseHandlerStub);\r\n      sinon.assert.calledWithNew(responseHandlerStub);\r\n    });\r\n\r\n    it('should have called the callback', function () {\r\n      sinon.assert.calledWith(callback, null, responseBody);\r\n    });\r\n\r\n  });\r\n\r\n  describe('POST with a request body', function () {\r\n\r\n    var path;\r\n    var body;\r\n    var bodyLength;\r\n    var responseBody;\r\n    var requestFake;\r\n    var requestStub;\r\n    var callback;\r\n\r\n    before(function () {\r\n      path = '1/2/3/4';\r\n      body = 'some unicode xml 🐳 body';\r\n      bodyLength = 26;\r\n      responseBody = 'This is the response body content';\r\n\r\n      requestFake = { on: sinon.stub(), end: sinon.stub(), write: sinon.spy() };\r\n\r\n      requestStub = sinon.stub().callsArg(1).returns(requestFake);\r\n      \r\n      let responseHandlerHandle = sinon.stub().callsArgWith(2, null, responseBody);\r\n      let responseHandlerStub = sinon.stub().returns({ handle: responseHandlerHandle })\r\n      \r\n      let userAgentBuilderFake = { Build: sinon.stub().returns('asdhjahsdj') }\r\n\r\n      callback = sinon.expectation.create().once();\r\n\r\n      let Handlers = proxyquire('../lib/requesthandler', {\r\n        'https': { request: requestStub },\r\n        './responsehandler': { ResponseHandler: responseHandlerStub },\r\n        './useragentbuilder': { UserAgentBuilder: userAgentBuilderFake }\r\n      });\r\n      let request: RequestHandler = new Handlers.RequestHandler(null);\r\n      request.request('POST', path, null, body, 798, callback);\r\n    });\r\n\r\n    it('should call the request with the POST method option', function () {\r\n      sinon.assert.calledWith(requestStub, sinon.match({ method: 'POST' }));\r\n    });\r\n\r\n    it('should call the request with an unmodified path option', function () {\r\n      sinon.assert.calledWith(requestStub, sinon.match({ path: path }));\r\n    });\r\n\r\n    it('should call the request with body specific headers', function () {\r\n      sinon.assert.calledWith(requestStub, sinon.match({\r\n        headers: {\r\n          'Content-Type': 'application/xml',\r\n          'Content-Length': bodyLength\r\n      }}));\r\n    });\r\n\r\n    it('should write the request body buffer to the request', function () {\r\n      sinon.assert.calledOnce(requestFake.write);\r\n      assert.equal(requestFake.write.args[0].toString('utf8'), body);\r\n    });\r\n\r\n    it('should have called the callback', function () {\r\n      sinon.assert.calledWith(callback, null, responseBody);\r\n    });\r\n\r\n  });\r\n\r\n  describe('POST without a request body', function () {\r\n\r\n    var path;\r\n    var responseBody;\r\n    var requestFake;\r\n    var requestStub;\r\n    var callback;\r\n\r\n    before(function () {\r\n      path = '1/2/3/4';\r\n      responseBody = 'This is the response body content';\r\n\r\n      requestFake = { on: sinon.stub(), end: sinon.stub(), write: sinon.expectation.create().once() };\r\n\r\n      requestStub = sinon.stub().callsArg(1).returns(requestFake);\r\n      \r\n      let responseHandlerHandle = sinon.stub().callsArgWith(2, null, responseBody);\r\n      let responseHandlerStub = sinon.stub().returns({ handle: responseHandlerHandle })\r\n      \r\n      let userAgentBuilderFake = { Build: sinon.stub().returns('asdhjahsdj') }\r\n\r\n      callback = sinon.expectation.create().once();\r\n\r\n      let Handlers = proxyquire('../lib/requesthandler', {\r\n        'https': { request: requestStub },\r\n        './responsehandler': { ResponseHandler: responseHandlerStub },\r\n        './useragentbuilder': { UserAgentBuilder: userAgentBuilderFake }\r\n      });\r\n      let request:RequestHandler = new Handlers.RequestHandler(null);\r\n      request.request('POST', path, null, null, 798, callback);\r\n    });\r\n\r\n    it('should call the request with the POST method option', function () {\r\n      sinon.assert.calledWith(requestStub, sinon.match({ method: 'POST' }));\r\n    });\r\n\r\n    it('should call the request with an unmodified path option', function () {\r\n      sinon.assert.calledWith(requestStub, sinon.match({ path: path }));\r\n    });\r\n\r\n    it('should call the request with body specific headers', function () {\r\n      sinon.assert.calledWith(requestStub, sinon.match({\r\n        headers: {\r\n          'Content-Type': 'application/xml',\r\n          'Content-Length': 0\r\n      }}));\r\n    });\r\n\r\n    it('should not write any request body', function () {\r\n      sinon.assert.notCalled(requestFake.write);\r\n    });\r\n\r\n    it('should have called the callback', function () {\r\n      sinon.assert.calledWith(callback, null, responseBody);\r\n    });\r\n\r\n  });\r\n\r\n  describe('PUT with a request body', function () {\r\n\r\n    var path;\r\n    var body;\r\n    var responseBody;\r\n    var requestFake;\r\n    var requestStub;\r\n    var callback;\r\n\r\n    before(function () {\r\n      path = 'who/do/we/appreciate';\r\n      body = 'I am xml body';\r\n      responseBody = 'I am response body';\r\n\r\n      requestFake = { on: sinon.stub(), end: sinon.stub(), write: sinon.expectation.create().once() };\r\n\r\n      requestStub = sinon.stub().callsArg(1).returns(requestFake);\r\n      \r\n      let responseHandlerHandle = sinon.stub().callsArgWith(2, null, responseBody);\r\n      let responseHandlerStub = sinon.stub().returns({ handle: responseHandlerHandle })\r\n      \r\n      let userAgentBuilderFake = { Build: sinon.stub().returns('asdhjahsdj') }\r\n\r\n      callback = sinon.expectation.create().once();\r\n\r\n      let Handlers = proxyquire('../lib/requesthandler', {\r\n        'https': { request: requestStub },\r\n        './responsehandler': { ResponseHandler: responseHandlerStub },\r\n        './useragentbuilder': { UserAgentBuilder: userAgentBuilderFake }\r\n      });\r\n      let request: RequestHandler = new Handlers.RequestHandler(null);\r\n      request.request('PUT', path, null, body, 3132, callback);\r\n    });\r\n\r\n    it('should call the request with the POST method option', function () {\r\n      sinon.assert.calledWith(requestStub, sinon.match({ method: 'PUT' }));\r\n    });\r\n\r\n    it('should call the request with an unmodified path option', function () {\r\n      sinon.assert.calledWith(requestStub, sinon.match({ path: path }));\r\n    });\r\n\r\n    it('should call the request with body specific headers', function () {\r\n      sinon.assert.calledWith(requestStub, sinon.match({\r\n        headers: {\r\n          'Content-Type': 'application/xml',\r\n          'Content-Length': body.length\r\n      }}));\r\n    });\r\n\r\n    it('should write the request body buffer to the request', function () {\r\n      sinon.assert.calledOnce(requestFake.write);\r\n      assert.equal(requestFake.write.args[0].toString('utf8'), body);\r\n    });\r\n\r\n    it('should have called the callback', function () {\r\n      sinon.assert.calledWith(callback, null, responseBody);\r\n    });\r\n\r\n  });\r\n\r\n  describe('with a request error', function () {\r\n\r\n    var requestError;\r\n    var requestFake;\r\n    var callback;\r\n\r\n    before(function () {\r\n      requestError = 'an error';\r\n\r\n      requestFake = { on: sinon.stub(), end: sinon.stub() };\r\n      requestFake.on.withArgs('error').callsArgWith(1, requestError);\r\n\r\n      let requestStub = sinon.stub().returns(requestFake);\r\n      \r\n      let userAgentBuilderFake = { Build: sinon.stub().returns('asdhjahsdj') }\r\n\r\n      callback = sinon.expectation.create().once();\r\n\r\n      let Handlers = proxyquire('../lib/requesthandler', {\r\n        'https': { request: requestStub },\r\n        './useragentbuilder': { UserAgentBuilder: userAgentBuilderFake }\r\n      });\r\n      let request: RequestHandler = new Handlers.RequestHandler(null);\r\n      request.request('PLOP', '/path', null, null, 3132, callback);\r\n    });\r\n\r\n    it('should have called the callback with the expected error', function () {\r\n      sinon.assert.calledWith(callback, requestError);\r\n    });\r\n\r\n  });\r\n\r\n  describe('with socket timeout', function () {\r\n\r\n    var timeout;\r\n    var socketFake;\r\n    var requestFake;\r\n    var callback;\r\n\r\n    before(function () {\r\n      timeout = 243;\r\n\r\n      socketFake = {\r\n        setTimeout: sinon.spy(),\r\n        on: sinon.stub(),\r\n        listeners: sinon.stub().returns([])\r\n      };\r\n      socketFake.on.callsArgOn(1, socketFake);\r\n\r\n      requestFake = {\r\n        on: sinon.stub(),\r\n        end: sinon.stub(),\r\n        abort: sinon.expectation.create().once()\r\n      };\r\n      requestFake.on.withArgs('socket').callsArgWith(1, socketFake);\r\n\r\n      let requestStub = sinon.stub().returns(requestFake);\r\n      \r\n      let userAgentBuilderFake = { Build: sinon.stub().returns('asdhjahsdj') }\r\n\r\n      callback = sinon.expectation.create().never();\r\n\r\n      let Handlers = proxyquire('../lib/requesthandler', {\r\n        'https': { request: requestStub },\r\n        './useragentbuilder': { UserAgentBuilder: userAgentBuilderFake }\r\n      });\r\n      let request: RequestHandler = new Handlers.RequestHandler({ timeout: timeout });\r\n      request.request('asdkj', '/290348nj', null, null, 215, callback);\r\n    });\r\n\r\n    it('should have set a socket timeout value', function () {\r\n      sinon.assert.calledWith(socketFake.setTimeout, timeout);\r\n    });\r\n\r\n    it('should have set a socket timeout listener', function () {\r\n      sinon.assert.calledWith(socketFake.on, 'timeout', sinon.match.func);\r\n    });\r\n\r\n    it('should have called request.abort on socket timeout', function () {\r\n      requestFake.abort.verify();\r\n    });\r\n\r\n    it('should have not called the callback', function () {\r\n      callback.verify();\r\n    });\r\n\r\n  });\r\n\r\n  describe('with existing socket timeout listener', function () {\r\n\r\n    var timeout;\r\n    var socketFake;\r\n\r\n    before(function () {\r\n      timeout = 64;\r\n\r\n      socketFake = { \r\n        setTimeout: sinon.stub(),\r\n        on: sinon.expectation.create().never(),\r\n        listeners: sinon.stub().withArgs('timeout').returns([1])\r\n      };\r\n\r\n      let requestFake = { on: sinon.stub(), end: sinon.stub(), abort: sinon.expectation.create().once() };\r\n      requestFake.on.withArgs('socket').callsArgWith(1, socketFake);\r\n      \r\n      let userAgentBuilderFake = { Build: sinon.stub().returns('asdhjahsdj') }\r\n\r\n      let requestStub = sinon.stub().returns(requestFake);\r\n\r\n      let Handlers = proxyquire('../lib/requesthandler', {\r\n        'https': { request: requestStub },\r\n        './useragentbuilder': { UserAgentBuilder: userAgentBuilderFake }\r\n      });\r\n      let request: RequestHandler = new Handlers.RequestHandler({ timeout: timeout });\r\n      request.request('asdkj', '/290348nj', null, null, 215, sinon.spy());\r\n    });\r\n\r\n    it('should have set a socket timeout value', function () {\r\n      sinon.assert.calledWithExactly(socketFake.setTimeout, timeout);\r\n    });\r\n\r\n    it('should not have set a socket timeout listener', function () {\r\n      socketFake.on.verify();\r\n    });\r\n\r\n  });\r\n\r\n  describe('with https disabled', function () {\r\n\r\n    var requestStub;\r\n\r\n    before(function () {\r\n      let requestFake = { on: sinon.stub(), end: sinon.stub(), write: sinon.stub() };\r\n      \r\n      let userAgentBuilderFake = { Build: sinon.stub().returns('asdhjahsdj') }\r\n\r\n      requestStub = sinon.expectation.create().once().returns(requestFake);\r\n\r\n      let Handlers = proxyquire('../lib/requesthandler', {\r\n        'http': { request: requestStub },\r\n        './useragentbuilder': { UserAgentBuilder: userAgentBuilderFake }\r\n      });\r\n      let request: RequestHandler = new Handlers.RequestHandler({ https: false });\r\n      request.request('PUT', '/290348nj', {}, null, 215, sinon.spy());\r\n    });\r\n\r\n    it('should have called request on the http module', function () {\r\n      requestStub.verify();\r\n    });\r\n\r\n  });\r\n\r\n});"],"sourceRoot":"../../src"}