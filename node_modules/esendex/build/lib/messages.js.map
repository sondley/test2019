{"version":3,"sources":["lib/messages.ts"],"names":["Messages","Messages.constructor","Messages.get","Messages.send","Messages.getBody"],"mappings":"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","file":"lib/messages.js","sourcesContent":["import {Client} from './client'\r\nimport {XmlParser} from'./xmlparser'\r\nimport {XmlBuilder} from './xmlbuilder'\r\nimport {format, isArray} from 'util'\r\n\r\nexport declare interface MessagesGetOptions {\r\n  id?: string\r\n}\r\n\r\nexport class Messages {\r\n  private client: Client;\r\n  private builder: XmlBuilder;\r\n  private parser: XmlParser;\r\n  \r\n  constructor (client: Client) {\r\n    this.client = client;\r\n    this.builder = new XmlBuilder('messages');\r\n    this.parser = new XmlParser();\r\n  }\r\n\r\n  get(options: MessagesGetOptions, callback) {\r\n    let path = '/v1.0/messageheaders';\r\n  \r\n    let messageId = options && options.id || null;\r\n    if (messageId) {\r\n      path = format('%s/%s', path, messageId);\r\n      delete options.id;\r\n    }\r\n  \r\n    this.client.requesthandler.request('GET', path, options, null, 200, (err, response) => {\r\n      if (err) return callback(err);\r\n  \r\n      this.parser.parseString(response, function (err, result) {\r\n        if (err) return callback(err);\r\n        if (messageId) return callback(null, result.messageheader);\r\n        \r\n        let messageheaders = result.messageheaders;\r\n  \r\n        if (!isArray(messageheaders.messageheader))\r\n          messageheaders.messageheader = [messageheaders.messageheader];\r\n  \r\n        callback(null, messageheaders);\r\n      });\r\n    });\r\n  }\r\n\r\n  send(messages, callback) {\r\n    let xml = this.builder.build(messages);\r\n  \r\n    this.client.requesthandler.request('POST', '/v1.0/messagedispatcher', null, xml, 200, (err, response) => {\r\n      if (err) return callback(err);\r\n  \r\n      this.parser.parseString(response, function (err, result) {\r\n        if (err) return callback(err);\r\n  \r\n        let messageheaders = result.messageheaders;\r\n  \r\n        if (!isArray(messageheaders.messageheader))\r\n          messageheaders.messageheader = [messageheaders.messageheader];\r\n  \r\n        callback(err, messageheaders);\r\n      });\r\n    });\r\n  }\r\n\r\n  getBody(messageId, callback) {\r\n    let path = format('/v1.0/messageheaders/%s/body', messageId);\r\n  \r\n    this.client.requesthandler.request('GET', path, null, null, 200, (err, response) => {\r\n      if (err) return callback(err);\r\n  \r\n      this.parser.parseString(response, function (err, result) {\r\n        if (err) return callback(err);\r\n        callback(err, result.messagebody);\r\n      });\r\n    });\r\n  }\r\n}"],"sourceRoot":"../../src"}