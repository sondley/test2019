{"version":3,"sources":["lib/responsehandler.ts"],"names":["ResponseHandler","ResponseHandler.constructor","ResponseHandler.handle"],"mappings":"AAEA;IAAAA;IAaAC,CAACA;IAZCD,gCAAMA,GAANA,UAAOA,GAAyBA,EAAEA,cAAsBA,EAAEA,QAAmDA;QAC3GE,IAAIA,YAAYA,GAAGA,EAAEA,CAACA;QACtBA,GAAGA,CAACA,EAAEA,CAACA,MAAMA,EAAEA,UAAUA,KAAKA;YAC5B,YAAY,IAAI,KAAK,CAAC;QACxB,CAAC,CAACA,CAACA;QACHA,GAAGA,CAACA,EAAEA,CAACA,KAAKA,EAAEA;YACZ,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK,cAAc,CAAC;gBACpC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,2BAA2B,GAAG,GAAG,CAAC,UAAU,GAAG,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC;YAElG,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAC/B,CAAC,CAACA,CAACA;IACLA,CAACA;IACHF,sBAACA;AAADA,CAbA,AAaCA,IAAA;AAbY,uBAAe,kBAa3B,CAAA","file":"lib/responsehandler.js","sourcesContent":["import * as http from 'http'\r\n\r\nexport class ResponseHandler {\r\n  handle(res: http.IncomingMessage, expectedStatus: number, callback: (err: any, responseData?: string) => void) {\r\n    var responseData = '';\r\n    res.on('data', function (chunk) {\r\n      responseData += chunk;\r\n    });\r\n    res.on('end', function () {\r\n      if (res.statusCode !== expectedStatus)\r\n        return callback(new Error('Unexpected API response (' + res.statusCode + '): ' + responseData));\r\n  \r\n      callback(null, responseData);\r\n    });\r\n  }\r\n}"],"sourceRoot":"../../src"}